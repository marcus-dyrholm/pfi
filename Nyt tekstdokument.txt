{ "cells": [ { "cell_type": "markdown", "metadata": {}, "source": [ "### DAE5: Descriptive statistics\n", "---\n", "author:\n", " Sofia Dahl\\\n", " Dept. Architecture, Design and Media Technology, Aalborg University\n", "\n", "I: Central tendencies\n", "======================\n", "\n", "The ways to summarize and represent data differ depending on measurement scales used and how the data collected looks. The mean value is a measure of central\n", "tendencies that is based on ALL values. The median, on the other hand,\n", "is less sensitive to extreme values.\n", "\n" ] }, { "cell_type": "code", "execution_count": 110, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "(41, 4)" ] }, "execution_count": 110, "metadata": {}, "output_type": "execute_result" } ], "source": [ "%matplotlib inline\n", "import numpy as np\n", "import pandas as pd\n", "#import statistics as stat\n", "import matplotlib.pyplot as plt\n", "\n", "#Let's look at data from earlier years ratings of the ICE-instrument music\n", "orig = pd.read_csv('DAE2019outdata.txt', delimiter = '\\t', header=0) \n", "\n", "#check dimensions of the data structure\n", "orig.shape" ] }, { "cell_type": "code", "execution_count": 3, "metadata": {}, "outputs": [ { "data": { "text/html": [ "
\n", "\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "
SKILL	QUALITY	PLEASANTNESS
count	41.000000	41.000000	41.000000
mean	70.682927	46.926829	65.243902
std	18.913539	24.764279	22.429646
min	30.000000	0.000000	11.000000
25%	59.000000	30.000000	51.000000
50%	71.000000	40.000000	70.000000
75%	85.000000	64.000000	83.000000
max	100.000000	100.000000	97.000000
\n", "
" ], "text/plain": [ " SKILL QUALITY PLEASANTNESS\n", "count 41.000000 41.000000 41.000000\n", "mean 70.682927 46.926829 65.243902\n", "std 18.913539 24.764279 22.429646\n", "min 30.000000 0.000000 11.000000\n", "25% 59.000000 30.000000 51.000000\n", "50% 71.000000 40.000000 70.000000\n", "75% 85.000000 64.000000 83.000000\n", "max 100.000000 100.000000 97.000000" ] }, "execution_count": 3, "metadata": {}, "output_type": "execute_result" } ], "source": [ "orig.describe() #note that this data has less scales rated compared to the data \n" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "The describe function gives us a nices summary of the data, but median is not included in it.\n", "\n", "Let's calculate that and compare" ] }, { "cell_type": "code", "execution_count": 4, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "SKILL 71.0\n", "QUALITY 40.0\n", "PLEASANTNESS 70.0\n", "dtype: float64\n" ] } ], "source": [ "#calculate median along the columns\n", "orig_med = orig.median(axis=0)\n", "print(orig_med)" ] }, { "cell_type": "code", "execution_count": 5, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "SKILL 72.0\n", "QUALITY 38.0\n", "PLEASANTNESS 63.0\n", "dtype: float64\n" ] } ], "source": [ "#Modify the following code to compare between the two groups\n", "\n", "print(orig.loc[orig['GROUP']=='audio'].median())" ] }, { "cell_type": "code", "execution_count": 24, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "SKILL 70.5\n", "QUALITY 41.0\n", "PLEASANTNESS 72.5\n", "dtype: float64\n" ] } ], "source": [ "print(orig.loc[orig['GROUP']=='audiovisual'].median())" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "\n", "\n", "# In-class Exercise 1:\n", "\n", "Calculate means and medians for all three scales also for the audio and audiovisual groups.\n", "\n", "Now answer the questions:\n", "\n", "- Why do mean and median values differ? \n", "\n", "\n", "- Are there meaningful differences in ratings between the two groups? \n" ] }, { "cell_type": "code", "execution_count": 6, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "SKILL 72.0\n", "QUALITY 38.0\n", "PLEASANTNESS 63.0\n", "dtype: float64\n", "SKILL 69.736842\n", "QUALITY 44.157895\n", "PLEASANTNESS 60.631579\n", "dtype: float64\n", "SKILL 70.5\n", "QUALITY 41.0\n", "PLEASANTNESS 72.5\n", "dtype: float64\n", "SKILL 71.500000\n", "QUALITY 49.318182\n", "PLEASANTNESS 69.227273\n", "dtype: float64\n" ] } ], "source": [ "#SOLUTION\n", "#Calculate means and medians for all three scales for the audiovisual group\n", "print(orig.loc[orig['GROUP']=='audio'].median())\n", "print(orig.loc[orig['GROUP']=='audio'].mean())\n", "print(orig.loc[orig['GROUP']=='audiovisual'].median())\n", "print(orig.loc[orig['GROUP']=='audiovisual'].mean())" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "ANSWER: Mean and medians are different ways of measuring central tendency. While the median finds the most \"middle point\" the mean is composed of ALL data points. This means that some values far from the center will have more influence on the mean than the median, If the data is perfectly normally distributed, mean and median are the same. " ] }, { "cell_type": "code", "execution_count": 26, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "AUDIO\n", "SKILL 19.311415\n", "QUALITY 26.907763\n", "PLEASANTNESS 23.894969\n", "dtype: float64\n", "AUDIOVISUAL\n", "SKILL 18.079999\n", "QUALITY 21.849457\n", "PLEASANTNESS 19.681398\n", "dtype: float64\n" ] } ], "source": [ "#to answer whether differences are meaningful: look at standard deviation \n", "print('AUDIO')\n", "print(np.std(orig.loc[orig['GROUP']=='audio'],axis=0))\n", "print('AUDIOVISUAL')\n", "print(np.std(orig.loc[orig['GROUP']=='audiovisual'],axis=0))" ] }, { "cell_type": "code", "execution_count": 27, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "AUDIO\n", " SKILL QUALITY PLEASANTNESS\n", "count 19.000000 19.000000 19.000000\n", "mean 69.736842 44.157895 60.631579\n", "std 19.840593 27.645098 24.549747\n", "min 30.000000 0.000000 11.000000\n", "25% 57.000000 22.000000 44.500000\n", "50% 72.000000 38.000000 63.000000\n", "75% 84.000000 53.500000 79.000000\n", "max 100.000000 100.000000 97.000000\n", "AUDIOVISUAL\n", " SKILL QUALITY PLEASANTNESS\n", "count 22.000000 22.000000 22.000000\n", "mean 71.500000 49.318182 69.227273\n", "std 18.505469 22.363632 20.144553\n", "min 40.000000 20.000000 30.000000\n", "25% 60.000000 30.000000 61.250000\n", "50% 70.500000 41.000000 72.500000\n", "75% 88.750000 64.750000 87.500000\n", "max 100.000000 100.000000 95.000000\n" ] } ], "source": [ "#You can also use describe and directly compare mean and standard deviation\n", "print('AUDIO')\n", "print(orig.loc[orig['GROUP']=='audio'].describe())\n", "print('AUDIOVISUAL')\n", "print(orig.loc[orig['GROUP']=='audiovisual'].describe())" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "ANSWER: Considering that standard deviations are around 20 on a scale from 0 to 100, differences of only a few points between mean ratings does not seem to be meaningful (or \"real\") differences." ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "Why mean values are deceptive.\n", "----\n", "\n", "Load a modified version of the data from last year and calculate means and medians." ] }, { "cell_type": "code", "execution_count": 29, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "(41, 4)" ] }, "execution_count": 29, "metadata": {}, "output_type": "execute_result" } ], "source": [ "orig_mod = pd.read_csv('DAE2019outputdata_modified.txt', delimiter = '\\t', header=0) \n", "orig_mod.shape\n" ] }, { "cell_type": "code", "execution_count": 9, "metadata": {}, "outputs": [ { "data": { "text/html": [ "
\n", "\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "
SKILL	QUALITY	PLEASANTNESS
count	41.000000	41.000000	41.000000
mean	70.682927	46.878049	65.243902
std	18.913539	34.945812	22.429646
min	30.000000	0.000000	11.000000
25%	59.000000	27.000000	51.000000
50%	71.000000	42.000000	70.000000
75%	85.000000	80.000000	83.000000
max	100.000000	100.000000	97.000000
\n", "
" ], "text/plain": [ " SKILL QUALITY PLEASANTNESS\n", "count 41.000000 41.000000 41.000000\n", "mean 70.682927 46.878049 65.243902\n", "std 18.913539 34.945812 22.429646\n", "min 30.000000 0.000000 11.000000\n", "25% 59.000000 27.000000 51.000000\n", "50% 71.000000 42.000000 70.000000\n", "75% 85.000000 80.000000 83.000000\n", "max 100.000000 100.000000 97.000000" ] }, "execution_count": 9, "metadata": {}, "output_type": "execute_result" } ], "source": [ "orig_mod.describe() " ] }, { "cell_type": "code", "execution_count": 10, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "SKILL 71.0\n", "QUALITY 32.0\n", "PLEASANTNESS 65.0\n", "dtype: float64\n" ] } ], "source": [ "print(orig_mod.loc[orig['GROUP']=='audio'].median())" ] }, { "cell_type": "code", "execution_count": 30, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "AUDIO\n", " SKILL QUALITY PLEASANTNESS\n", "count 19.000000 19.000000 19.000000\n", "mean 68.736842 42.473684 58.736842\n", "std 19.876961 32.726762 19.899308\n", "min 30.000000 0.000000 11.000000\n", "25% 57.000000 23.500000 48.500000\n", "50% 71.000000 32.000000 65.000000\n", "75% 83.500000 64.500000 72.500000\n", "max 100.000000 100.000000 90.000000\n", "AUDIOVISUAL\n", " SKILL QUALITY PLEASANTNESS\n", "count 22.000000 22.000000 22.000000\n", "mean 72.363636 50.681818 70.863636\n", "std 18.339511 37.085983 23.397793\n", "min 40.000000 0.000000 20.000000\n", "25% 60.000000 30.000000 60.750000\n", "50% 73.500000 46.500000 77.500000\n", "75% 85.750000 88.750000 90.000000\n", "max 100.000000 100.000000 97.000000\n" ] } ], "source": [ "# compare overall values to the original dataset also for the other group\n", "print('AUDIO')\n", "print(orig_mod.loc[orig['GROUP']=='audio'].describe())\n", "print('AUDIOVISUAL')\n", "print(orig_mod.loc[orig['GROUP']=='audiovisual'].describe())" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "ANSWER: For the auido only group, mean values differ by a few points between original and modified for SKILL (69.74 vs 69.74);\n", "QUALITY (44.16 vs. 42.47); and PLEASANTNESS (60.63 vs. 58.74). Similar for the audiovisual group (71.50 vs 72.36; 49.32 vs. 50.68; and 69.23 vs.70.86)." ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "Describing Variability in data\n", "===\n", "\n", "From the above, it should now be clear that only reporting mean values typically do not tell much about the true\n", "nature of the data without information also about the *variability* or\n", "*spread* in it. The simplest way of reporting the variability is giving\n", "the range of the data, that is the smallest and largest value. However,\n", "variance and standard deviation is more helpful to get an idea of the\n", "variability and where most values are found.\n", "\n", "\n", "VARIANCE is the sum of the squared difference between each individual\n", "score and the mean, all divided by the number of scores\n", "\n", "$$\\sigma^2 =\\frac{\\sum{ (X_i-\\bar{X}})^2 } {N}$$ \n", "\n", "where $X_i$ is each\n", "individual value (that is $X_1, X_2, ..., X_N$) and $\\bar{X}$ is the\n", "arithmetic mean.\n", "\n", "\n", "STANDARD DEVIATION is simply the square root of the variance\n", "$$\\sigma =\\sqrt {\\sigma^2}$$\n", "\n", "The standard deviation can be thought of as a measure of distance from\n", "the mean. Assuming that data is normally distributed, most of the scores can be found within this distance (68.27% of them to be more precise).\n", "\n", "What you see above refers to the true variance and the true standard deviation of the population. What differs in the forumla when calculating the standard deviation for a sample instead of the whole population?" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "ANSWER: The difference between sample and population calculations is N-1 in the denominator. This is to compensate for one less degree of freedom (since the sample mean is already an estimate)." ] }, { "cell_type": "code", "execution_count": 34, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "Sample variance\n", "SKILL 395.093567\n", "QUALITY 1071.040936\n", "PLEASANTNESS 395.982456\n", "dtype: float64\n", "Sample standard deviation\n", "SKILL 19.876961\n", "QUALITY 32.726762\n", "PLEASANTNESS 19.899308\n", "dtype: float64\n" ] } ], "source": [ "#compute sample variance and standard deviation\n", "\n", "#SOLUTION\n", "# The difference in the denominator is made by setting the parameter ddof=1, see\n", "#help(np.var)\n", "print('Sample variance')\n", "print(np.var(orig_mod.loc[orig['GROUP']=='audio'],ddof=1))\n", "\n", "#similar for standard deviation\n", "print('Sample standard deviation')\n", "print(np.std(orig_mod.loc[orig['GROUP']=='audio'],ddof=1))" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "Below you see code that summarizes the data in another way, using box plots. What does the different parts in the plot signify?\n", "\n", "- the green horizontal line\n", "- the edges of the box itself\n", "- the length of the upper and lower \"whiskers\"\n" ] }, { "cell_type": "code", "execution_count": 36, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "" ] }, "execution_count": 36, "metadata": {}, "output_type": "execute_result" }, { "data": { "image/png": "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\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "#Plot box plots for the audio only group and the rated scales\n", "orig.loc[orig['GROUP']=='audio'].boxplot()\n" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "ANSWER: Use help(plt.boxplot) to find the details. In the help text you will find that\n", "\n", "\"The box extends from the lower to upper quartile values of the data, with a line at the median. The whiskers extend from the box to show the range of the\n", "data.\"\n", "\n", "That is, the box itself shows the range of 50% of the data, with the median indicated by the green horizontal line. The whiskers are the vertical lines extending to the most extreme, non-outlier data points.\n", "\n", "If there are outliers in the data these will be indicated by \"Flier points\" (i.e. separate points past the end of the whiskers). " ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "Import the ratings from this year and compare how they compare to the original data from last year.\n" ] }, { "cell_type": "code", "execution_count": 38, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "(43, 6)" ] }, "execution_count": 38, "metadata": {}, "output_type": "execute_result" } ], "source": [ "#modify and combine earlier code to make barplots for SKILL; QUALITY; PLEASANTNESS for this years' ratings. \n", "\n", "#SOLUTION\n", "#read the original data\n", "ICE= pd.read_excel('Icemusic-ratings2020.xlsx', sheet_name='Dataset') \n", "\n", "#the data is messy with several missing rows and columns we don't need\n", "#we can select a subset, with the first 6 columns and exclude NaN\n", "dl=ICE.take([0, 1, 2, 3, 4, 5], axis=1).dropna(how='any')\n", "\n", "dl.shape #check that we have the right number of columns" ] }, { "cell_type": "code", "execution_count": 44, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ " s_1 skill quality pleasant own_expertice own_confidence\n", "count 20.0 20.000000 20.000000 20.000000 20.000000 20.000000\n", "mean 1.0 72.350000 39.300000 63.450000 42.150000 43.900000\n", "std 0.0 15.708781 22.489998 21.741241 30.039054 29.829163\n", "min 1.0 35.000000 5.000000 15.000000 0.000000 0.000000\n", "25% 1.0 66.250000 24.250000 49.750000 17.500000 23.750000\n", "50% 1.0 75.000000 30.000000 63.000000 50.000000 43.500000\n", "75% 1.0 81.750000 56.250000 78.250000 65.000000 63.750000\n", "max 1.0 96.000000 80.000000 100.000000 93.000000 93.000000\n", " s_1 skill quality pleasant own_expertice own_confidence\n", "count 23.0 23.000000 23.000000 23.000000 23.000000 23.000000\n", "mean 2.0 80.043478 54.260870 58.173913 48.652174 42.739130\n", "std 0.0 8.048028 23.747186 28.994752 31.148630 29.991237\n", "min 2.0 66.000000 14.000000 7.000000 1.000000 1.000000\n", "25% 2.0 75.000000 37.500000 24.500000 21.500000 20.000000\n", "50% 2.0 80.000000 58.000000 69.000000 50.000000 40.000000\n", "75% 2.0 85.000000 70.000000 77.500000 77.500000 69.500000\n", "max 2.0 100.000000 96.000000 99.000000 100.000000 100.000000\n" ] } ], "source": [ "#We want to separate the two groups, this is done by the column s_1\n", "audio=dl.loc[dl['s_1']==1]\n", "audiovisual=dl.loc[dl['s_1']==2]\n", "\n", "#check that values are correct in that column\n", "print(audio.describe())\n", "print(audiovisual.describe())" ] }, { "cell_type": "code", "execution_count": 56, "metadata": {}, "outputs": [ { "data": { "image/png": "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\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "scales=('Skill', 'Quality', 'Pleasantness')\n", "plt.bar(scales,[np.mean(audio.skill), np.mean(audio.quality), np.mean(audio.pleasant)])\n", "plt.ylabel('Ratings')\n", "plt.title('Audio only group')\n", "plt.show()" ] }, { "cell_type": "code", "execution_count": 57, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "Audiovisual\n" ] }, { "data": { "image/png": "\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "scales=('Skill', 'Quality', 'Pleasantness')\n", "print('Audiovisual')\n", "plt.bar(scales,[np.mean(audiovisual.skill), np.mean(audiovisual.quality), np.mean(audiovisual.pleasant)])\n", "plt.ylabel('Ratings')\n", "plt.title('Audiovisual group')\n", "plt.show()" ] }, { "cell_type": "code", "execution_count": 58, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "Text(0, 0.5, 'Ratings')" ] }, "execution_count": 58, "metadata": {}, "output_type": "execute_result" }, { "data": { "image/png": "\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "#easier to compare when plotted in subplots\n", "fig,(ax1,ax2)= plt.subplots(1,2,figsize=(10.0, 5.0))\n", "\n", "ax1.bar(scales,[np.mean(audio.skill), np.mean(audio.quality), np.mean(audio.pleasant)])\n", "ax2.bar(scales,[np.mean(audiovisual.skill), np.mean(audiovisual.quality), np.mean(audiovisual.pleasant)])\n", "\n", "ax1.set_title('Audio group')\n", "ax2.set_title('Audiovisual group')\n", "ax1.set_ylabel('Ratings')" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "# In-class Exercise 2:\n", "---\n", "Use the collected samples of heights in a google document. \n", "\n", "(a) Calculate SAMPLE mean $\\bar{X}$ and standard deviation $S$ for each sample in the google document.\n", "\n", "(b) Make a histogram with the distribution of the different means.\n" ] }, { "cell_type": "code", "execution_count": 84, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "SAMPLE 1\\n 182.166667\n", "SAMPLE 2\\n 174.000000\n", "SAMPLE 3\\n 175.500000\n", "SAMPLE 4\\n 186.833333\n", "SAMPLE 5\\n 176.600000\n", "SAMPLE 6\\n 172.800000\n", "SAMPLE 7\\n 183.200000\n", "SAMPLE 8\\n 173.000000\n", "SAMPLE 9\\n 180.800000\n", "dtype: float64\n", "Standard deviation\n", "SAMPLE 1\\n 14.661742\n", "SAMPLE 2\\n 5.549775\n", "SAMPLE 3\\n 12.911235\n", "SAMPLE 4\\n 9.304121\n", "SAMPLE 5\\n 7.700649\n", "SAMPLE 6\\n 20.117157\n", "SAMPLE 7\\n 7.155418\n", "SAMPLE 8\\n 9.874209\n", "SAMPLE 9\\n 11.777096\n", "dtype: float64\n" ] } ], "source": [ "#load heights data\n", "temp = pd.read_excel('Heights.xlsx',header=1, index_col=0) \n", "\n", "#Lots of NaN, take only relevant columns\n", "heights=temp.take([0, 1, 2, 3, 4, 5, 6,7, 8, 9])\n", "\n", "#SOLUTION 2(a)\n", "\n", "#calculate means and standard deviation for each sample\n", "print(np.mean(heights))\n", "print('Standard deviation')\n", "print(np.std(heights, ddof=1)) #sample means mean adjustment of degrees of freedom\n", "# See help(np.std) for details\n" ] }, { "cell_type": "code", "execution_count": 61, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "(array([3., 1., 1., 0., 0., 1., 1., 1., 0., 1.]),\n", " array([172.8 , 174.20333333, 175.60666667, 177.01 ,\n", " 178.41333333, 179.81666667, 181.22 , 182.62333333,\n", " 184.02666667, 185.43 , 186.83333333]),\n", " )" ] }, "execution_count": 61, "metadata": {}, "output_type": "execute_result" }, { "data": { "image/png": "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\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "#SOLUTION 2(b)\n", "plt.hist(np.mean(heights))" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "As expected the means differ depending on the sample." ] }, { "cell_type": "code", "execution_count": 106, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "54" ] }, "execution_count": 106, "metadata": {}, "output_type": "execute_result" } ], "source": [ "#You can make individual vectors for each sample\n", "sample1= heights.iloc[0:6,0] #make vector with the data for the first sample\n", "sample2=heights.iloc[0:6,1]\n", "sample3=heights.iloc[0:6,2]\n", "sample4=heights.iloc[0:6,3]\n", "sample5=heights.iloc[0:6,4]\n", "sample6=heights.iloc[0:6,5]\n", "sample7=heights.iloc[0:6,6]\n", "sample8=heights.iloc[0:6,7]\n", "sample9=heights.iloc[0:6,8]\n", "\n", "#and also add them together\n", "allsamples = pd.concat([sample1, sample2, sample3, sample4, sample5, sample6, sample7, sample8, sample9])\n", "\n", "#check length of allsamples\n", "len(allsamples)" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "(c) Calculate the mean for ALL heights across all samples.\n", "\n", "\n", "(d) How much does the individual sample means differ from the overall\n", " mean height?" ] }, { "cell_type": "code", "execution_count": 102, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "178.42857142857142" ] }, "execution_count": 102, "metadata": {}, "output_type": "execute_result" } ], "source": [ "#Solution 2(c)\n", "np.mean(allsamples)" ] }, { "cell_type": "code", "execution_count": 104, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "SAMPLE 1\\n 3.738095\n", "SAMPLE 2\\n -4.428571\n", "SAMPLE 3\\n -2.928571\n", "SAMPLE 4\\n 8.404762\n", "SAMPLE 5\\n -1.828571\n", "SAMPLE 6\\n -5.628571\n", "SAMPLE 7\\n 4.771429\n", "SAMPLE 8\\n -5.428571\n", "SAMPLE 9\\n 2.371429\n", "dtype: float64\n" ] } ], "source": [ "#Solution 2(d)\n", "print(np.mean(heights)-np.mean(allsamples))" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "ANSWER: As expected differs the individual sample means from the overall population mean (178.43 cm). In most cases only by 2-5 cm, but Sample 4 differs by more than 8 cm (Sample 4 mean 186 cm)." ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "ANSWER\n", "---- \n", " What conclusions can you draw from the sample size and the true mean?" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "ANSWER: With small sample sizes, one can get unlucky and get data points less representative to the true mean. In this case, we have regarded the whole data set as the population, but more interesting would be to compare it to the average heights in Denmark and the world. Unfortunately, the dataset does not include sex, which makes comparison less straightforward.\n", "For a great page on heights across the world, check: https://ourworldindata.org/human-height#height-is-normally-distributed" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "II: Frequency distributions\n", "==\n", "\n", "To understand how to best describe the central tendency we also need to look at the distribution of data. \n", "\n", "\n", "Plot the histograms for the ratings and the two groups" ] }, { "cell_type": "code", "execution_count": 21, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "Text(0.5, 1.0, 'Audiovisual group: QUALITY')" ] }, "execution_count": 21, "metadata": {}, "output_type": "execute_result" }, { "data": { "image/png": "\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "fig,(ax1,ax2)= plt.subplots(1,2,figsize=(10.0, 5.0))\n", "\n", "ax1.hist(orig.loc[orig['GROUP']=='audio'].QUALITY, bins=10)\n", "ax2.hist(orig.loc[orig['GROUP']=='audiovisual'].QUALITY, bins=10)\n", "\n", "\n", "ax1.set_title('Audio group: QUALITY')\n", "ax2.set_title('Audiovisual group: QUALITY')\n" ] }, { "cell_type": "code", "execution_count": 22, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "Text(0.5, 1.0, 'Audiovisual group: QUALITY')" ] }, "execution_count": 22, "metadata": {}, "output_type": "execute_result" }, { "data": { "image/png": "\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "# Now do the same thing for the modified data\n", "fig,(ax1,ax2)= plt.subplots(1,2,figsize=(10.0, 5.0))\n", "\n", "ax1.hist(orig.loc[orig['GROUP']=='audio'].QUALITY, bins=10)\n", "ax1.hist(orig_mod.loc[orig['GROUP']=='audio'].QUALITY, bins=10)\n", "ax2.hist(orig.loc[orig['GROUP']=='audiovisual'].QUALITY, bins=10)\n", "ax2.hist(orig_mod.loc[orig['GROUP']=='audiovisual'].QUALITY, bins=10)\n", "\n", "ax1.set_title('Audio group: QUALITY')\n", "ax2.set_title('Audiovisual group: QUALITY')\n" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "Discussion points 1:\n", "---\n", "\n", "How reliable are mean values with respect to central tendency if e.g. for the QUALITY between the two datasets?\n", "\n", "How would you describe these distributions? Normally distributed? Skewed?" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "Normal distribution\n", "----\n", "\n", "\n", "The normal, or gaussian, distribution is described by\n", "\n", "$$ y(x) =\\frac{1}{\\sigma \\sqrt{2 \\pi}} e^{-(\\frac{x-\\mu)^2}{2\\sigma^2}}$$ \n", "\n", "where $\\sigma$ is the standard devaiation and $\\mu$ is the\n", "arithmetic mean.\n" ] }, { "cell_type": "code", "execution_count": 119, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "[]" ] }, "execution_count": 119, "metadata": {}, "output_type": "execute_result" }, { "data": { "image/png": "\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "#plot a normal distribution where sigma=1 and mu=0\n", "\n", "#generate an x-vector\n", "x = np.arange(-4, 14, 0.1)\n", "sigma = 1\n", "mu=0\n", "\n", "\n", "#calculate a normal distribution of x with a mean of 0\n", "y1 =1/(sigma* np.sqrt(2*np.pi))*np.exp((-x**2)/2)\n", "\n", "plt.plot(x,y1)" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "Now modify the above function and plot a normal distribution with a different mean and DOUBLE the standard deviation.\n", "Plot both in the same plot\n" ] }, { "cell_type": "code", "execution_count": 121, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "[]" ] }, "execution_count": 121, "metadata": {}, "output_type": "execute_result" }, { "data": { "image/png": "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\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "#Modify the above function to calculate y2 and plot a normal distribution with a different mean and DOUBLE the standard deviation \n", "#SOLUTION\n", "sigma2=2\n", "mu2=1\n", "\n", "#Note that we need to change the equation to include the mean (that is no longer 0 as above)\n", "\n", "y2 =1/(sigma2* np.sqrt(2*np.pi))*np.exp(-((x-mu2)**2)/((2*sigma2)**2))\n", " \n", "#plot both curves to compare\n", "plt.plot(x,y1) \n", "plt.plot(x,y2)" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "The normal distribution is so common that it forms the basis of most parametric and inferental statistics. We will use this later in the course.\n", "\n", "Still, not all data can be expected to be normally distributed." ] }, { "cell_type": "code", "execution_count": 122, "metadata": {}, "outputs": [ { "data": { "text/html": [ "
\n", "\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "
age (years)	height (cm)	h TV /week	h games /week	h study /week
count	55.000000	55.000000	55.000000	55.000000	55.000000
mean	23.345455	178.454545	7.890909	9.622727	24.709091
std	3.140053	8.619139	7.482505	10.161870	19.885480
min	19.000000	152.000000	0.000000	0.000000	3.000000
25%	21.000000	173.000000	3.000000	1.500000	9.500000
50%	23.000000	180.000000	5.000000	6.000000	15.000000
75%	25.000000	185.000000	10.000000	15.000000	50.000000
max	35.000000	195.000000	35.000000	40.000000	60.000000
\n", "
" ], "text/plain": [ " age (years) height (cm) h TV /week h games /week h study /week\n", "count 55.000000 55.000000 55.000000 55.000000 55.000000\n", "mean 23.345455 178.454545 7.890909 9.622727 24.709091\n", "std 3.140053 8.619139 7.482505 10.161870 19.885480\n", "min 19.000000 152.000000 0.000000 0.000000 3.000000\n", "25% 21.000000 173.000000 3.000000 1.500000 9.500000\n", "50% 23.000000 180.000000 5.000000 6.000000 15.000000\n", "75% 25.000000 185.000000 10.000000 15.000000 50.000000\n", "max 35.000000 195.000000 35.000000 40.000000 60.000000" ] }, "execution_count": 122, "metadata": {}, "output_type": "execute_result" } ], "source": [ "#load data collected from an earlier generation on medialogy\n", "\n", "data = pd.read_csv('dataset3.txt', delimiter = '\\t', header=0) \n", "data.describe() \n" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "Discussion point 2:\n", "---\n", "Which of these collected data measures in dataset3 would you expect to be normally distributed? Why/ why not?\n", "\n", "Plot the histograms and check your assumptions." ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "ANSWER: On a bachelor education where most students start after high school, it is likely that ages will be normally distributed. Students can be older, but not a great deal will be younger than their early twenties. There are other examples of distributions that one would expect to be skewed, such as reaction times." ] }, { "cell_type": "code", "execution_count": 62, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "(array([ 7., 20., 9., 9., 1., 5., 3., 0., 0., 1.]),\n", " array([19. , 20.6, 22.2, 23.8, 25.4, 27. , 28.6, 30.2, 31.8, 33.4, 35. ]),\n", " )" ] }, "execution_count": 62, "metadata": {}, "output_type": "execute_result" }, { "data": { "image/png": "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\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "#histogram of first column (age)\n", "plt.hist(data.iloc[:,0], bins=10)\n" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "Calculate the means and standard deviations and use these to plot normal distributions on top of the histograms." ] }, { "cell_type": "code", "execution_count": 168, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "age (years) 23.345455\n", "height (cm) 178.454545\n", "h TV /week 7.890909\n", "h games /week 9.622727\n", "h study /week 24.709091\n", "dtype: float64\n", "age (years) 3.111376\n", "height (cm) 8.540424\n", "h TV /week 7.414170\n", "h games /week 10.069065\n", "h study /week 19.703874\n", "dtype: float64\n" ] } ], "source": [ "#Solution\n", "\n", "#get variables with calculated mean values\n", "m4mus=np.mean(data, axis=0)\n", "m4sigmas=np.std(data, axis=0)\n", "print(m4mus)\n", "print(m4sigmas)" ] }, { "cell_type": "code", "execution_count": 175, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "Text(0.5, 1.0, 'Age')" ] }, "execution_count": 175, "metadata": {}, "output_type": "execute_result" }, { "data": { "image/png": "\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "#Use means and stdevs by in the calculation of normal distribution curves by indexing \n", "\n", "count, bins, ignored = plt.hist(data.iloc[:,0], 30, density=True)\n", "#index 0 are values for age\n", "heightgauss =1/(m4sigmas.iloc[0]* np.sqrt(2*np.pi))*np.exp(-((bins-m4mus.iloc[0])**2)/((2*m4sigmas.iloc[0])**2))\n", "plt.plot(bins, heightgauss, linewidth=2, color='y')\n", "plt.title('Age')" ] }, { "cell_type": "code", "execution_count": 176, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "Text(0.5, 1.0, 'Heights')" ] }, "execution_count": 176, "metadata": {}, "output_type": "execute_result" }, { "data": { "image/png": "\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "#Now the same for Heights, index 1\n", "count, bins, ignored = plt.hist(data.iloc[:,1], 30, density=True)\n", "heightgauss =1/(m4sigmas.iloc[1]* np.sqrt(2*np.pi))*np.exp(-((bins-m4mus.iloc[1])**2)/((2*m4sigmas.iloc[1])**2))\n", "plt.plot(bins, heightgauss, linewidth=2, color='y')\n", "plt.title('Heights')" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "III: Random samples\n", "==\n", "\n", "From the above we can see that the describtive statistics such as means, variance and standard deviations seem to be varying depending on the sample. In particular, the sample size has a great influence.\n", "\n", "We can use ready-made functions to see the relation betewen sample size and how our estimate of the mean will vary.\n" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "# In-class Exercise 3:\n", "---\n", "Draw a sample of sample size N from a standard normal distribution.\n", "\n", "Let the distribution be a standard normal distribution, that\n", "is with a true mean $\\mu= 0$ and a standard deviation $\\sigma=1$. Plot\n", "histograms with 10 bins for the following four N:\n", "\n", "1) N=10\n", "\n", "2) N= 20\n", "\n", "3) N= 100\n", "\n", "4) N=1000" ] }, { "cell_type": "code", "execution_count": 181, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "(array([1., 1., 0., 2., 1., 4., 0., 0., 0., 1.]),\n", " array([-1.15910475, -0.79639534, -0.43368593, -0.07097652, 0.29173289,\n", " 0.6544423 , 1.01715172, 1.37986113, 1.74257054, 2.10527995,\n", " 2.46798936]),\n", " )" ] }, "execution_count": 181, "metadata": {}, "output_type": "execute_result" }, { "data": { "image/png": "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\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "mu, sigma = 0, 1 # mean and standard deviation\n", "\n", "N=10\n", "N_10 = np.random.normal(mu, sigma, N) #mu = mean, sigma = SD, N = numbers\n", "\n", "plt.hist(N_10)\n" ] }, { "cell_type": "code", "execution_count": 182, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "(array([2., 1., 2., 1., 1., 2., 3., 3., 3., 2.]),\n", " array([-1.33977603, -1.10061982, -0.86146361, -0.62230739, -0.38315118,\n", " -0.14399497, 0.09516124, 0.33431746, 0.57347367, 0.81262988,\n", " 1.05178609]),\n", " )" ] }, "execution_count": 182, "metadata": {}, "output_type": "execute_result" }, { "data": { "image/png": "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\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "N2=20\n", "N_20 = np.random.normal(mu, sigma, N2) #mu = mean, sigma = SD, N = numbers\n", "\n", "plt.hist(N_20)" ] }, { "cell_type": "code", "execution_count": 183, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "(array([ 1., 2., 15., 13., 16., 19., 12., 10., 7., 5.]),\n", " array([-2.28172068, -1.83696283, -1.39220498, -0.94744713, -0.50268928,\n", " -0.05793143, 0.38682642, 0.83158428, 1.27634213, 1.72109998,\n", " 2.16585783]),\n", " )" ] }, "execution_count": 183, "metadata": {}, "output_type": "execute_result" }, { "data": { "image/png": "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\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "N3=100\n", "N_100 = np.random.normal(mu, sigma, N3) #mu = mean, sigma = SD, N = numbers\n", "\n", "plt.hist(N_100)" ] }, { "cell_type": "code", "execution_count": 184, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "(array([ 5., 28., 123., 189., 226., 225., 138., 50., 15., 1.]),\n", " array([-2.85844717, -2.24983931, -1.64123146, -1.0326236 , -0.42401575,\n", " 0.18459211, 0.79319996, 1.40180782, 2.01041567, 2.61902353,\n", " 3.22763138]),\n", " )" ] }, "execution_count": 184, "metadata": {}, "output_type": "execute_result" }, { "data": { "image/png": "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\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "N4=1000\n", "N_1000 = np.random.normal(mu, sigma, N4) #mu = mean, sigma = SD, N = numbers\n", "\n", "plt.hist(N_1000)" ] }, { "cell_type": "code", "execution_count": 185, "metadata": {}, "outputs": [ { "data": { "image/png": "\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "#Compare with a curve of the normal distribution for the different N\n", "\n", "#N=10\n", "count, bins, ignored = plt.hist(N_10, 10, density=True)\n", "plt.plot(bins, 1/(sigma * np.sqrt(2 * np.pi)) * np.exp( - (bins - mu)**2 / (2 * sigma**2) ),\n", "linewidth=2, color='r')\n", "plt.title('N=10')\n", "plt.show()" ] }, { "cell_type": "code", "execution_count": 191, "metadata": {}, "outputs": [ { "data": { "image/png": "\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "#N=20\n", "count, bins, ignored = plt.hist(N_20, 10, density=True)\n", "plt.plot(bins, 1/(sigma * np.sqrt(2 * np.pi)) * np.exp( - (bins - mu)**2 / (2 * sigma**2) ),\n", "linewidth=2, color='r')\n", "plt.title('N=20')\n", "plt.show()" ] }, { "cell_type": "code", "execution_count": 192, "metadata": {}, "outputs": [ { "data": { "image/png": "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\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "#N = 100\n", "count, bins, ignored = plt.hist(N_100, 10, density=True)\n", "plt.plot(bins, 1/(sigma * np.sqrt(2 * np.pi)) * np.exp( - (bins - mu)**2 / (2 * sigma**2) ),\n", "linewidth=2, color='r')\n", "plt.title('N=100')\n", "plt.show()" ] }, { "cell_type": "code", "execution_count": 193, "metadata": {}, "outputs": [ { "data": { "image/png": "\n", "text/plain": [ "
" ] }, "metadata": { "needs_background": "light" }, "output_type": "display_data" } ], "source": [ "#N=1000\n", "count, bins, ignored = plt.hist(N_1000, 30, density=True)\n", "plt.plot(bins, 1/(sigma * np.sqrt(2 * np.pi)) * np.exp( - (bins - mu)**2 / (2 * sigma**2) ),\n", "linewidth=2, color='r')\n", "plt.title('N=1000')\n", "plt.show()" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "\n", "Calculate the sample means $\\bar{X_i}$ of the three samples you just generated for the four N above. How do the values differ from the real mean $\\mu$ of the standard normal distribution?" ] }, { "cell_type": "code", "execution_count": 215, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "10 0.460000\n", "20 -0.005635\n", "100 0.044334\n", "1000 -0.014082\n", "dtype: float64\n" ] } ], "source": [ "#SOLUTION\n", "#create a series of the different sample means\n", "samplemeans=pd.Series([np.mean(N_10), np.mean(N_20), np.mean(N_100), np.mean(N_1000)],index=('10','20','100','1000'))\n", "print(samplemeans)" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "ANSWER: N=10 gives a result that is very off, but one can also get lucky. Try re-drawing the samples by running the code again and see how values change." ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "ANSWER\n", "----\n", "What happens to $\\bar{X}$ as N becomes larger? The distribution becomes more normalized\n", "\n", "What would be a reasonable size of N to give a good estimate of $\\mu$ ? " ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "ANSWER: The more N increases, the closer the sample mean $\\bar{X}$ is to the true population mean $\\mu$.\n", "This is logical, since the largest sample size would be the whole population.\n", "\n", "There is not one definite answer to how large sample size that is needed, 1000 would get you closer than 20, but for practical purposes 30 might still be good enough." ] } ], "metadata": { "kernelspec": { "display_name": "Python 3", "language": "python", "name": "python3" }, "language_info": { "codemirror_mode": { "name": "ipython", "version": 3 }, "file_extension": ".py", "mimetype": "text/x-python", "name": "python", "nbconvert_exporter": "python", "pygments_lexer": "ipython3", "version": "3.7.3" } }, "nbformat": 4, "nbformat_minor": 4 }